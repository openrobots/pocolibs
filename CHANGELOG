Version 2.4.1, 9 September 2008 

 84. Fix a stack corruption bug introduced by change 83. 

Version 2.4, 11 August 2008

 83. Add a 'taskFromThread(char *name)' function. (Matthieu Gallien).
 83. Assume that target systems have posix timers when cross-compiling
 82. Let autoheader generate pocolibs-config.h.in
 81. Switch repository to git
 80. Fix a race in change #77.
 79. Eliminate more uses of sprintf().
 78. Fix tickLib regression test.

Version 2.3, 31 July 2007

 77. Fix taskDelete hooks handling.
 76. Relax constraint on h2timer periods.
 75. h2 init no longer starts posterServ by default. Use h2 init -p. 
 74. Add a flag to h2devInit() to control the launch of posterServ. 
     Bump portLib major. 
 73. Fix build of posterLib tests programs.
 72. Remove VxWorks/RTAI/LXRT parts.

Version 2.2, 19 December 2006
 
 71. Let configure find the gnu tar program for make dist.
 70. Remove the xes subsystem, which is no longer used. 
 69. Preliminary support for building Xenomai 2.x enabled libs, using the 
     POSIX skin.
 68. Remove RTAI/LXRT support in configure scripts
 67. Remove use of X11 events in xes_server.
 66. Remove double clear of h2timer counters (Sylvain Joyeux).
 65. Fix build problems on Darwin.
 64. Provide a correct day of week in H2TIME structure. 
 63. Fix h2timeShow() that was broken in multiple ways. 

Version 2.1, 11 November 2005

 62. Some basic support for kbuild for RTAI 3.1 kernel modules 
     (not working).
 61. Rework error messages handling. No more central h2errorList.
 60. More ANSI C prototypes in header files.
 59. Add a autogen.sh script to generate the configure script and garbage 
     collect unneeded files.
 58. Merge missing parts of lxrt support in existing files.
 57. Add missing files for lxrt support.

Version 2.1beta1, 26 August 2005

 56. Use vpath <pattern> instead of VPATH in Makefiles to minimize trouble 
     when builddir != srcdir and srcdir has been configured already.
 55. Add a man page for h2time functions.
 54. Add a h2GetTimeSpec() function that returs a timespec-like structure.
     This should be used instead of calling clock_gettime() directly. 
 53. Check for clock_gettime in configure scripts
 52. Add regression tests.
 51. Packaging fixes.
 50. Add a pkg-config data file and install it
 49. Write manual pages for portLib
 48. return S_symLib_NOT_IMPLEMENTED for symFindByValue()
 47. sprintf() -> snprintf() conversion
 46. less printf()s in portLib
 45. more comments translation
 44. Makefiles cleanups (Sylvain Joyeux, Matthieu Herrb).
 43. Add a h2semSet() function to force the value of a semaphore (Sylvain
     Joyeux).
 42. Add a posterName() function and a FIO_FRESH ioctl to posterLib (Sylvain 
     Joyeux).
 41. Valgrind support (Sylvain Joyeux).
 40. Remove some unused files. 
 39. Make headers C++ compatible (Sylvain Joyeux). 
 38. Add --{disable,enable}-posix-timer option to configure, to be able
     to force the timer type that is used by tickLib, as the auto-detection
     of useable POSIX timer is not always reliable enough.
 37. Added --with-linux-kernel-includes option to specify the path to
     linux kernel headers when compiling for RTAI.
 36. Revert the change that made the posterId in posterServ an uint64_t.
 35. Autotoolize the build of the poster test programs.
 34. Start over with libtool style shared libraries version numbers. 
     Bump all major revisions to make sure nothing bad happens.
 33. Add a configure test for usabilility of POSIX timers for a 
     100Hz sysClk.
 32. Add a 'tick' regress test to check the accuracy of sysClk. 
     (Linux 2.4 POSIX timers are known to be unable to set a clock
     at 100Hz).
 31. Some cleanups in header files: avoid nested includes. 
 30. Fix posterLib LP64 issues.
 29. Implemented a real-time logging library for RTAI. Added logInit and
     logEnd. Bumped portLib minor.
 28. Updated RTAI/user-space to handle multi-threaded linux processes.
     It now uses one real-time task per thread.
 27. Added devfs support for RTAI.
 26. install-sh does not overwrite files if they were not modified.
 25. Preliminary RTAI/user-space support. posterLib requires a more
     complicated implementation: as of now, posters can be shared between
     RTAI-tasks and linux processes but this breaks the real-time
     properties of RTAI-tasks.
 24. Added taskDelete() regression test.
 23. Added --with-debug option to configure script. It allows the
     selection of independant components to debug.
 22. Added h2devClean() in comLib. This was previously defined in h2.c
     but it was problematic for user-space RTAI version. Bumped comLib
     minor.
 21. Added taskOptionsSet()/taskOptionsGet() in taskLib and a new task's
     option bit PORTLIB_UNPRIVILEGED. This is used internally by comLib
     for user space communication under RTAI. Bumped portLib minor.
 20. Reworked makefiles and configure scripts in order to be able to
     compile both kernel modules and userspace libraries with the same
     configure; make; make install step under RTAI. 
 19. Added RTAI support.
 18. Added regression tests.
 17. Split h2devLib and smMemLib into os-independant and os-specific parts.
 16. Use memcpy instead of bcopy everywhere.
 15. Removed system-specific includes from headers, and modified some
     structures definitions to use standard C types instead of posix
     types (in particular changed uid_t into long, key_t into long and
     u_long into unsigned long). This shouldn't break anything.
 14. Implemented and added semMCreate() and converted commonStruct.c and
     h2timerLib.c functions to use it instead of pthread_*
     routines. Added h2timerEnd() that undo h2timerInit() actions. Made
     SEM_ID an opaque data type in order to hide some pthread-specific
     stuff from headers.
 13. Made OS_TCB an opaque data type and put the definition in
     taskLib.c. Moved the errnoGet,Set() functions into taskLib.c since
     they need access to the TCB. Replaced tcb->name by taskName() calls
     in mboxLib.c.
 12. Added taskName() and osExit() functions to portLib. Turned the
     logMsg #define into a real function definition and created logLib.h
     header.
 11. Moved config.h to pocolibs-config.h in order to prevent name clashes
     with <linux/config.h> when compiling linux modules.
 10. Created os/posix subdirectories and moved some posix specific files
     in there in order to prepare the upcoming rtai support.
  9. Get rid of the remaining ifdef __DARWIN__ checks. They are not
     needed with Mac OS X 10.3.3 anymore, and I don't intend to support
     earlier versions.
  8. Add support for rpcgen -C in posterServ. Removes one of the 
     last #ifdef <system>, and makes this stuff build on MacOS X.
  7. Split aclocal.m4. 
  6. Effectively handle the possibility to disable X11 (xes).
  5. Look for rpcgen instead of blindly using `rpcgen' (useful for
     cross-compiling).
  4. Install include files (Anthony Mallet).
  3. Fix detection of thread-related options in C compilers.
  2. Adapt the build system to use GNU configure and libtool.
  1. Import the current internal LAAS version

$LAAS$
