Version 2.0, xx July 2004
 34. Start over with libtool style shared libraries version numbers. 
     Bump all major revisions to make sure nothing bad happens.
 33. Add a configure test for usablility of POSIX timers for a 
     100Hz sysClk.
 32. Add a 'tick' regress test to check the accuracy of sysClk. 
     (Linux 2.4 POSIX timers are known to be unable to set a clock
     at 100Hz).
 31. Some cleanups in header files: avoid nested includes. 
 30. Fix posterLib LP64 issues.
 29. Implemented a real-time logging library for RTAI. Added logInit and
     logEnd. Bumped portLib minor.
 28. Updated RTAI/user-space to handle multi-threaded linux processes.
     It now uses one real-time task per thread.
 27. Added devfs support for RTAI.
 26. install-sh does not overwrite files if they were not modified.
 25. Preliminary RTAI/user-space support. posterLib requires a more
     complicated implementation: as of now, posters can be shared between
     RTAI-tasks and linux processes but this breaks the real-time
     properties of RTAI-tasks.
 24. Added taskDelete() regression test.
 23. Added --with-debug option to configure script. It allows the
     selection of independant components to debug.
 22. Added h2devClean() in comLib. This was previously defined in h2.c
     but it was problematic for user-space RTAI version. Bumped comLib
     minor.
 21. Added taskOptionsSet()/taskOptionsGet() in taskLib and a new task's
     option bit PORTLIB_UNPRIVILEGED. This is used internally by comLib
     for user space communication under RTAI. Bumped portLib minor.
 20. Reworked makefiles and configure scripts in order to be able to
     compile both kernel modules and userspace libraries with the same
     configure; make; make install step under RTAI. 
 19. Added RTAI support.
 18. Added regression tests.
 17. Split h2devLib and smMemLib into os-independant and os-specific parts.
 16. Use memcpy instead of bcopy everywhere.
 15. Removed system-specific includes from headers, and modified some
     structures definitions to use standard C types instead of posix
     types (in particular changed uid_t into long, key_t into long and
     u_long into unsigned long). This shouldn't break anything.
 14. Implemented and added semMCreate() and converted commonStruct.c and
     h2timerLib.c functions to use it instead of pthread_*
     routines. Added h2timerEnd() that undo h2timerInit() actions. Made
     SEM_ID an opaque data type in order to hide some pthread-specific
     stuff from headers.
 13. Made OS_TCB an opaque data type and put the definition in
     taskLib.c. Moved the errnoGet,Set() functions into taskLib.c since
     they need access to the TCB. Replaced tcb->name by taskName() calls
     in mboxLib.c.
 12. Added taskName() and osExit() functions to portLib. Turned the
     logMsg #define into a real function definition and created logLib.h
     header.
 11. Moved config.h to pocolibs-config.h in order to prevent name clashes
     with <linux/config.h> when compiling linux modules.
 10. Created os/posix subdirectories and moved some posix specific files
     in there in order to prepare the upcoming rtai support.
  9. Get rid of the remaining ifdef __DARWIN__ checks. They are not
     needed with Mac OS X 10.3.3 anymore, and I don't intend to support
     earlier versions.
  8. Add support for rpcgen -C in posterServ. Removes one of the 
     last #ifdef <system>, and makes this stuff build on MacOS X.
  7. Split aclocal.m4. 
  6. Effectively handle the possibility to disable X11 (xes).
  5. Look for rpcgen instead of blindly using `rpcgen' (useful for
     cross-compiling).
  4. Install include files (Anthony Mallet).
  3. Fix detection of thread-related options in C compilers.
  2. Adapt the build system to use GNU configure and libtool.
  1. Import the current internal LAAS version

$LAAS$
